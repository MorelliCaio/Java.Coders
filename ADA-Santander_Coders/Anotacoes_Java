>> Informações iniciais <<
    <> Java é uma linguagem compilada, e precisa de um ambiente próprio para a execução </>
    <> A instalação que alguns apps precisam, é uma instalação de execução </>
    <> Para programar em java, precisamos do JDK (Java development kit) </>
    <> IDE - integrated development Enviroment </>
    <> Java é uma linguagem fortemente tipada. então sempre precisamos tipar cada variavel </>
    <> tipos que temos em java = byte, short, int, long, float, double, boolean, char. </>
        - byte = entre -128 a 127;
        - short = -32mil a 32mil;
        - int = -2^31 a 2^31;
        - long = -2^63 a 2^53;
        - float e double = para numeros quebrados;
        - boolean = verdadeiro ou falso;
        - char = representação de qualquer simbolo;
        - String = Letras.
    <> Java entende que a divisão de 1 inteiro, por outro inteiro, o resultado precisa ser inteiro </>
    <> Tabela Verdade:
        >> Operador && (And);
            > True && True = True
            > True && False = False
            > False && True = False
            > False && False = False
        >> Operador || (OR)
            > True || True = True
            > True || False = True
            > False || True = True
            > False || False = False
        >> Operador Ternario (Quando temos 2 operadores possiveis)
            > Podemos usar para declaração de uma frase no terminal por exemplo. bem parecido com os operadores condicionais, onde SE true, frase 1 : (SE NÃO) frase 2
    <> Podemos manipular os dados de cada variavel </>
        >> Temos alguns exemplos disso:
            > toUpperCase = Sera para transformar todas as strings em letras maiusculas
            > toLowerCase = sera para transformar todas as strings em letras minusculas
            > length = sera para contabilizar a quantidade de itens dentro de uma variavel (Qualquer delas que seja)
            > equals = sera para ver se duas variaveis tem valores iguais, e retorna um resultado booleano. e ainda podemos ignorar o caso de uma letra ser maiuscula em uma variavel, e minuscula em outro com o equalsIgnoreCase.
    <> ISO 8601 = ela vai definir como representar uma data no mundo inteiro. em java, usamos LocalDate, que precisa ser importado (Import java.time.LocalDate; (Que deve ser uma biblioteca(O Java 22 ja importa uma biblioteca automaticamente)))
    <> Podemos usar os laços de repetição para quando precisamos repetir um numero exato de vezes o mesmo codigo </>
        >> Normalmente usamos um contador para isso, onde ele vai passar por uma serie de verificações, até chegar ao final das verificações que demos como limite. 
            > Um exemplo de linha de codigo de loop, que acredito que tenha em todas as linguagens de programação, é a "for(int(variavel) i = 1; i <= 100; i++)
            > No exemplo acima, a variavel i ira contabilizar uma serie de vezes e ser incrementada a cada vez que ela contar.
        >> Também podemos incluir um laço de repetição dentro do outro.
            > Como no exemplo ascima contabilizamos até o numero 100, então por que não contabilizarmos isso construindo uma tabuada até o 100?
            > dentro das chaves do primeiro laço, criamos o segundo com a mesma estrutura, porem com o nome da variavel diferente, contabilizando até 10, e incrementando toda vez que terminar a contagem.
            > assim, a repetição i, só ira incrementar quando finalizar a contagem j.
            > o maior segredo disso esta em como printaremos isso.
                -> a printagem na tela nessa hora, é a mais importante. usaremos aqui em java assim "(j + "x" + i + "=" + j * i)"
                -> onde j representara o primeiro numero, os "+" estão ali para ajuntar a declaração da variavel com a string (Que esta entre parentezes), e finalizando com a multiplicação entre o j e o i
    <> sobre arreys, informação importante. principalmente em Java que é uma linguagem fortemente tipada, não podemos misturar tipos dentro de um array </>
    <> Numa linguagem fortemente tipada como java, precisamos declarar a quantidade de indices usados. o que não pode ser mudado durante o codigo, apenas quando declarado </>
    <> Lembrando, indices começa a partir do 0 </>
    <> Maior e menor são baseados em comparação. uma boa maneira de descobrir qual é o numero maior e menor, é começar com o primeiro elemento do array </>
    <> Java é uma linguagem fortemente tipada, então não podemos misturar tipos no mesmo array </>